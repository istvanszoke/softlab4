set -o pipefail

source "$LIB_DIR/debug_print.sh"

normalize="$1"

# We will have to generate the docs multiple times, but on a fail it's easier to debug only
# one of the LaTeX outputs. Also note that this function doesn't clean up the temporaries,
# which can be useful in the debugging process
generate_docs() {
    if [ "$normalize" == "--no-normalize" ]; then
        pdflatex -halt-on-error "$DOCS_DIR/szoftlab4.tex" | pdflatex_colorize
    else
        pdflatex -halt-on-error "$DOCS_DIR/szoftlab4.tex" | pdflatex_normalize | pdflatex_colorize
    fi

    if [ $? -ne 0 ]; then
        debug_error "Documentation generation ended (see pdflatex output for more information)"
        exit -1
    fi
    
    echo
}

debug_info "Documentation generation started"

cd "$DOCS_DIR"

# Calling generate_docs 3 times, because of LaTeX's quirks: the first run generates
# the base document, the second fixes table headers and generates a Table of Contents (ToC)
# the third fixes up page numbers that are potentially ruined by the insertion of the ToC
generate_docs
generate_docs
generate_docs

# Deleting the temporary files generated by LaTeX at the end of the generation, this helps
# keeping the working directory clean (not all LaTeX distributions support separate temporary
# directories).
rm -f *.{aux,lof,log,out,toc}

cd "$TOP_DIR"

debug_success "Documentation generation ended"
 
